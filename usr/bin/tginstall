#!/bin/sh
# Copyright (c) 2020 TorGuard forum user 19807409
# ‚ÑπÔ∏è check submitted vars
if [ -z ${1+x} ]; then TGIF="tg0" && echo "TorGuard Interface was not submited, using default: ${TGIF}"; else TGIF="${1}" && echo "TorGuard Interface submitted: ${TGIF}"; fi
if [ -z ${2+x} ]; then WGIFNR="0" && echo "WireGuard Interface Number was not submited, using default: ${WGIFNR}"; else WGIFNR="${1}" && echo "TorGuard Interface submitted: ${WGIFNR}"; fi

# üîê TorGuard credentials
TGUSER=$(uci get torguard.@credentials_${TGIF}[0].username)
TGPASS=$(uci get torguard.@credentials_${TGIF}[0].password)

# üÜî TorGuard interface
WGIFNR=$(uci get torguard.${TGIF}.ifstartnr)
FIREWALLZONE=$(uci get torguard.${TGIF}.zone)
WGINTERFACE=$(uci get torguard.${TGIF}.ifname)
NOHOSTROUTE=$(uci torguard.@interface_${TGIF}[0].nohostroute)
LISTENPORT=$(uci get torguard.@interface_${TGIF}[0].listen_port)
MTU=$(uci get torguard.@interface_${TGIF}[0].mtu)
FWMARK=$(uci get torguard.@interface_${TGIF}[0].fwmark)
KEEPALIVE=$(uci get torguard.@interface_${TGIF}[0].persistent_keepalive)
DELEGATE=$(uci get torguard.@interface_${TGIF}[0].delegate)
ROUTEALLOWEDIPS=$(uci get torguard.@interface_${TGIF}[0].route_allowed_ips)
ENDPOINT=$(uci get torguard.@wireguard_${TGIF}[0].endpoint_host):$(uci get torguard.@wireguard_${TGIF}[0].endpoint_port)
# üõ°Ô∏è Torguard server [host]:[port]
ENPOINTPORT=$(uci get torguard.@wireguard_${TGIF}[0].endpoint_port)

# ‚ÑπÔ∏è Initialize luci configs and install wireguard interface
echo "### SETTINGS ###
TorGuard interface:             ${TGIF}

### üîê TorGuard credentials ###
TorGuard Username: ${TGUSER}
TorGuard Password: ${TGPASS}


Wireguard interface:            ${WGINTERFACE}
üÜî Wireguard interface number:   ${WGIFNR}
Assign to firewall zone:        ${FIREWALLZONE} (0 - lan, 1 - wan)
Do not create routes for hosts: ${NOHOSTROUTE} (0 - creates routes for allowed hosts , 1 - does not create routes for allowed hosts)
Listen port:                    ${LISTENPORT}
MTU:                            ${MTU}
Firewall mark:                  ${FWMARK}
Use builtin IPv6-management:    ${DELEGATE}

Persistent Keep Alive:          ${KEEPALIVE}
Route Allowed IPs:              ${ROUTEALLOWEDIPS}
Endpoint host:                  ${ENDPOINT}
Endpoint host port:             ${ENPOINTPORT}
üõ°Ô∏è Torguard wireguard server:   ${ENDPOINT}:${ENPOINTPORT}"

read -p "Continue (y/n)?" answer
case "$answer" in 
  y|Y ) echo "starting $0...";tginit "${TGUSER}" "${TGPASS}" "${WGINTERFACE}" "${WGIFNR}" "${NOHOSTROUTE}" "${LISTENPORT}" "${MTU}" "${FWMARK}" "${KEEPALIVE}" "${DELEGATE}" "${ROUTEALLOWEDIPS}" "${FIREWALLZONE}" "${ENDPOINT}:${ENPOINTPORT}";;
  n|N ) echo "user abort, script finished";;
  * ) echo "invalid";;
esac
